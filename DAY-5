#Password Generator Project
import random
letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

print("Welcome to the PyPassword Generator!")
nr_letters= int(input("How many letters would you like in your password?\n")) 
nr_symbols = int(input("How many symbols would you like?\n"))
nr_numbers = int(input("How many numbers would you like?\n"))

#Eazy Level - Order not randomised:
#e.g. 4 letter, 2 symbol, 2 number = JduE&!91
password =""
for _ in range(nr_letters):
  password+=random.choice(letters)
for _ in range(nr_symbols):
  password+=random.choice(symbols)
for _ in range(nr_numbers):
  numbers = random.choice(numbers)

password_list = list(password)
random.shuffle(password_list)
shuffled_password = ''.join(password_list)
#Hard Level - Order of characters randomised:
#e.g. 4 letter, 2 symbol, 2 number = g^2jk8&P

print("Your password:", shuffled_password)
 #the python in build function we used:-
 #random.choice(): This function is like having a magical hat filled with various options. You can reach into the hat and randomly pick one item. In our code, random.choice() helps us select a random element from a list of letters, symbols, or numbers. It adds an element of surprise and randomness to our password generation.

 #random.shuffle(): Imagine you have a deck of cards, and you want to shuffle them to create a random order. random.shuffle() does exactly that, but not just for cards, for any sequence of items. It takes a sequence, like a list, and randomly rearranges its elements. In our code, we use random.shuffle() to shuffle the characters in our generated password. It adds an extra level of unpredictability to our password, making it harder to guess.
